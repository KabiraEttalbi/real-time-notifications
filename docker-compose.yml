version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: kab0411
      MYSQL_DATABASE: notifications_db
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  user-service:
    build: ./user-service
    container_name: user-service
    depends_on:
      - kafka
      - mysql
    ports:
      - "8081:8081"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: notifications_db
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppass
  notification-service:
    build: ./notification-service
    container_name: notification-service
    depends_on:
      - kafka
      - mysql
    ports:
      - "8082:8082"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: notifications_db
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppass


  event-publisher-service:
    build: ./event-publisher-service
    container_name: event-publisher-service
    depends_on:
      - kafka
    ports:
      - "8083:8083"
    environment:
      KAFKA_BROKERS: kafka:29092

  logging-service:
    build: ./logging-service
    container_name: logging-service
    depends_on:
      - kafka
      - mysql
    ports:
      - "8084:8084"
    environment:
      KAFKA_BROKERS: kafka:29092
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: notifications_db
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppass


  web-interface:
    build: ./web-interface
    container_name: web-interface
    depends_on:
      - kafka
      - mysql
      - user-service
      - notification-service
      - event-publisher-service
      - logging-service
    ports:
      - "8085:8085"
    environment:
      KAFKA_BROKERS: kafka:29092
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: notifications_db
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppass

volumes:
  mysql_data:
